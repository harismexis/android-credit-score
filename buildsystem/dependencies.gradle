allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

ext {
    kotlin = '1.5.21'
    def appcompat = '1.3.1'
    def material = '1.5.0-alpha01'
    def constraint_layout = '2.0.4'
    def swipe_refresh_layout = '1.1.0'
    def core_ktx = '1.6.0'
    def lifecycle = '2.3.1'
    def activity_ktx = '1.2.4'
    def fragment_ktx = '1.3.6'
    def coroutines_android = '1.5.1'
    def room = '2.3.0'
    def dagger_2 = '2.38'
    def gson = '2.8.7'
    def retrofit_gson = '2.9.0'
    def retrofit = '2.9.0'
    def androidx_test = '1.4.0'
    def espresso = '3.3.0'
    def androidx_junit = '1.1.3'
    def arch_core = '2.1.0'
    def mockk = '1.12.0'
    def mockk_android = '1.12.0'
    def kotest_assertions_core = '4.6.1'

    libraries = [
            kotlin             : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin",
            appCompat          : "androidx.appcompat:appcompat:$appcompat",
            material           : "com.google.android.material:material:$material",
            constraint_layout  : "androidx.constraintlayout:constraintlayout:$constraint_layout",
            core_ktx           : "androidx.core:core-ktx:$core_ktx",
            livedata_ktx       : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle",
            viewmodel_ktx      : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle",
            activity_ktx       : "androidx.activity:activity-ktx:$activity_ktx",
            fragment_ktx       : "androidx.fragment:fragment-ktx:$fragment_ktx",
            coroutines         : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android",
            coroutines_android : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android",
            gson               : "com.google.code.gson:gson:$gson",
            retrofit_gson      : "com.squareup.retrofit2:converter-gson:$retrofit_gson",
            retrofit           : "com.squareup.retrofit2:retrofit:$retrofit",
            room               : "androidx.room:room-ktx:$room",
            swiperefreshlayout : "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_refresh_layout"
    ]

    librariesKapt = [
            room : "androidx.room:room-compiler:$room"
    ]

    testLibraries = [
            junit           : "androidx.test.ext:junit:$androidx_junit",
            coroutines_test : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android",
            core_testing    : "androidx.arch.core:core-testing:$arch_core",
            mockk           : "io.mockk:mockk:$mockk",
            kotest_assertions_core : "io.kotest:kotest-assertions-core:$kotest_assertions_core"
    ]

    androidTestLibraries = [
            core_testing           : "androidx.arch.core:core-testing:$arch_core",
            test_core_ktx          : "androidx.test:core-ktx:$androidx_test",
            runner                 : "androidx.test:runner:$androidx_test",
            rules                  : "androidx.test:rules:$androidx_test",
            junit                  : "androidx.test.ext:junit:$androidx_junit",
            espresso_core          : "androidx.test.espresso:espresso-core:$espresso",
            coroutines_test        : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android",
            mockk_android          : "io.mockk:mockk-android:$mockk_android"
    ]

    daggerDependancies = [
            dagger                 : "com.google.dagger:dagger:$dagger_2",
            dagger_android         : "com.google.dagger:dagger-android:$dagger_2",
            dagger_android_support : "com.google.dagger:dagger-android-support:$dagger_2"
    ]

    annotationProcessorsDependencies = [
            dagger_compiler          : "com.google.dagger:dagger-compiler:$dagger_2",
            dagger_android_processor : "com.google.dagger:dagger-android-processor:$dagger_2"
    ]

    librariesDebug = []
}
